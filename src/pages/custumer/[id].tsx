import { db } from "@/lib/firebase";
import { collection, limit, orderBy, query, where } from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import { useCollection } from "react-firebase-hooks/firestore";
import { ClipLoader } from "react-spinners";
import { Breadcrumb, Panel } from "rsuite";

export default function CustumerId() {
  const router = useRouter();
  const { id }: any = router.query;

  const [value, loading, error] = useCollection(
    id &&
      query(
        collection(db, "sales"),
        where("custumer.id", "==", id),
        orderBy("createdAt", "desc"),
        limit(1)
      )
  );

  const orders: any = value?.docs.map((doc) => ({
    id: doc.id,
    ...doc.data(),
  }));

  if (orders?.length === 0) {
    return (
      <section className="container p-6 mx-auto">
        <div>Pedido não encontrado.</div>
      </section>
    );
  }

  return (
    <>
      <Head>
        <title>Clientes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="container p-6 mx-auto">
        {error && <strong>Error: {JSON.stringify(error)}</strong>}
        {loading && <ClipLoader color="#36d7b7" />}
        {orders && (
          <Panel
            bordered
            header={
              <>
                <h3 className="title">{orders[0].custumer.name}</h3>
                <Breadcrumb>
                  <Breadcrumb.Item href="/">Home</Breadcrumb.Item>
                  <Breadcrumb.Item href="/custumer">Cliente</Breadcrumb.Item>
                  <Breadcrumb.Item active>Último pedido</Breadcrumb.Item>
                </Breadcrumb>
              </>
            }
            className="bg-white"
          >
            <div className="relative overflow-x-auto">
              <table className="w-full text-left">
                <thead className="uppercase text-gray-700  bg-gray-200">
                  <tr>
                    <th className="px-6 py-3">Nome</th>
                    <th>Qtde.</th>
                    <th>Preço</th>
                  </tr>
                </thead>
                <tbody>
                  {orders[0].items?.map((item: any, index: any) => (
                    <tr key={index} className="bg-gray-50 border-b">
                      <td className="px-6 py-4">
                        {item.name} {item.size && `(${item.size})`}
                      </td>
                      <td>x{item.quantity} </td>
                      <td>
                        {item.price.toLocaleString("pt-br", {
                          style: "currency",
                          currency: "BRL",
                          minimumFractionDigits: 2,
                          maximumFractionDigits: 2,
                        })}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </Panel>
        )}
      </section>
    </>
  );
}
